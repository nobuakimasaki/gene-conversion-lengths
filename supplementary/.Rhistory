labs(x = "Tract length (bp)", y = "P(length = n)") +
theme_bw() +
theme(legend.title = element_blank())
# Save plot
ggsave("figs/pmf.png", width = 7, height = 5)
# Supplementary Figure
# Define PMF functions
calc_pmf_geom <- function(n, phi) {(1 - phi)^(n - 1) * phi}
calc_pmf_geom2 <- function(n, phi) {(n - 1) * (1 - phi)^(n - 2) * phi^2}
calc_pmf_geom3 <- function(n, phi) {choose(n - 1, 2) * (1 - phi)^(n - 3) * phi^3}
# Define support
x <- 1:1500
# Compute PMFs
pmf_geom     <- sapply(x, calc_pmf_geom, phi = 1 / 300)
pmf_geom2    <- sapply(x, calc_pmf_geom2, phi = 1 / 150)
pmf_geom3    <- sapply(x, calc_pmf_geom3, phi = 1 / 100)
pmf_uniform  <- ifelse(x >= 1 & x <= 599, 1 / 599, 0)
# Mixture parameters
weight1 <- 0.05
mean1 <- 700
mean2 <- (100 - weight1 * mean1) / (1 - weight1)  # = 1300 / 19
phi1 <- 1 / mean1
phi2 <- 1 / mean2
# Compute mixture using calc_pmf_geom
pmf_mix1 <- sapply(x, calc_pmf_geom, phi = phi1)
pmf_mix2 <- sapply(x, calc_pmf_geom, phi = phi2)
pmf_mixture <- weight1 * pmf_mix1 + (1 - weight1) * pmf_mix2
# Combine into one data frame
data <- data.frame(
x = x,
Geometric = pmf_geom,
Sum2Geometric = pmf_geom2,
Sum3Geometric = pmf_geom3,
Uniform = pmf_uniform,
Mixture = pmf_mixture
)
# Reshape for ggplot
data_long <- tidyr::pivot_longer(
data,
cols = -x,
names_to = "Distribution",
values_to = "Probability"
)
# Color palette
color_palette <- c(
"Geometric" = "#56B4E9",
"Sum2Geometric" = "#F0E442",
"Sum3Geometric" = "#E69F00",
"Uniform" = "#009E73",
"Mixture" = "#CC79A7"
)
# Plot
ggplot(data_long, aes(x = x, y = log(Probability), color = Distribution)) +
geom_line(size = 1) +
scale_color_manual(
values = color_palette,
breaks = c("Geometric", "Sum2Geometric", "Sum3Geometric", "Uniform", "Mixture"),
labels = c("Geometric", "Sum of two geometric", "Sum of three geometric", "Uniform", "Mixture")
) +
scale_x_continuous(
limits = c(1, 1500),
breaks = c(1, seq(250, 1500, by = 250))
) +
labs(x = "Tract length (bp)", y = "P(length = n)") +
theme_bw() +
theme(legend.title = element_blank())
# Save plot
ggsave("figs/pmf.png", width = 7, height = 5)
# Supplementary Figure
# Define PMF functions
calc_pmf_geom <- function(n, phi) {(1 - phi)^(n - 1) * phi}
calc_pmf_geom2 <- function(n, phi) {(n - 1) * (1 - phi)^(n - 2) * phi^2}
calc_pmf_geom3 <- function(n, phi) {choose(n - 1, 2) * (1 - phi)^(n - 3) * phi^3}
# Define support
x <- 1:1500
# Compute PMFs
pmf_geom     <- sapply(x, calc_pmf_geom, phi = 1 / 300)
pmf_geom2    <- sapply(x, calc_pmf_geom2, phi = 1 / 150)
pmf_geom3    <- sapply(x, calc_pmf_geom3, phi = 1 / 100)
pmf_uniform  <- ifelse(x >= 1 & x <= 599, 1 / 599, 0)
# Mixture parameters
weight1 <- 0.05
mean1 <- 700
mean2 <- (100 - weight1 * mean1) / (1 - weight1)  # = 1300 / 19
phi1 <- 1 / mean1
phi2 <- 1 / mean2
# Compute mixture using calc_pmf_geom
pmf_mix1 <- sapply(x, calc_pmf_geom, phi = phi1)
pmf_mix2 <- sapply(x, calc_pmf_geom, phi = phi2)
pmf_mixture <- weight1 * pmf_mix1 + (1 - weight1) * pmf_mix2
# Combine into one data frame
data <- data.frame(
x = x,
Geometric = pmf_geom,
Sum2Geometric = pmf_geom2,
Sum3Geometric = pmf_geom3,
Uniform = pmf_uniform,
Mixture = pmf_mixture
)
# Reshape for ggplot
data_long <- tidyr::pivot_longer(
data,
cols = -x,
names_to = "Distribution",
values_to = "Probability"
)
# Color palette
color_palette <- c(
"Geometric" = "#56B4E9",
"Sum2Geometric" = "#F0E442",
"Sum3Geometric" = "#E69F00",
"Uniform" = "#009E73",
"Mixture" = "#CC79A7"
)
# Plot
ggplot(data_long, aes(x = x, y = log(Probability), color = Distribution)) +
geom_line(size = 1) +
scale_color_manual(
values = color_palette,
breaks = c("Geometric", "Sum2Geometric", "Sum3Geometric", "Uniform", "Mixture"),
labels = c("Geometric", "Sum of two geometric", "Sum of three geometric", "Uniform", "Mixture")
) +
scale_x_continuous(
limits = c(1, 1500),
breaks = c(1, seq(250, 1500, by = 250))
) +
labs(x = "Tract length (bp)", y = "log(P(N = n))") +
theme_bw() +
theme(legend.title = element_blank())
# Save plot
ggsave("figs/pmf.png", width = 7, height = 5)
### This file is used to run the analyses in the Supplementary Materials
# load in packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(zoo)
source('model.R')
# function to estimate the probability that an observed tract length is 1 bp
pL_geom_1M <- function(psi, l, phi, M) {
if (l == 1) {return(phi*psi/(phi*psi + psi^2*(1 - phi - (1 - phi)^M)))}
else {return(phi*(1-phi)^(l-1)*psi^2/(phi*psi + psi^2*(1 - phi - (1 - phi)^M)))}
}
# probability mass function of L truncated between 2 and 1500 bp
get_exp_freq_2M <- function(psi, phi, M) {
density <- lapply(2:1500, pL_geom_2M, psi, phi, M) %>% unlist()
return(density)
}
# read coalescent simulation results
sim.0.5 <- readRDS("../main_sim/res.sim.2M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.keep.ends.rds")
### This file is used to run the analyses in the Supplementary Materials
# load in packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(zoo)
source('model.R')
# function to estimate the probability that an observed tract length is 1 bp
pL_geom_1M <- function(psi, l, phi, M) {
if (l == 1) {return(phi*psi/(phi*psi + psi^2*(1 - phi - (1 - phi)^M)))}
else {return(phi*(1-phi)^(l-1)*psi^2/(phi*psi + psi^2*(1 - phi - (1 - phi)^M)))}
}
# probability mass function of L truncated between 2 and 1500 bp
get_exp_freq_2M <- function(psi, phi, M) {
density <- lapply(2:1500, pL_geom_2M, psi, phi, M) %>% unlist()
return(density)
}
# read coalescent simulation results
sim.0.5 <- readRDS("../simulation/data/res.sim.2M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.keep.ends.rds")
getwd()
# List all relevant CSV files in the directory
file_paths <- list.files("../simulation/results/", pattern = "^l_psi_seed.*\\.csv$", full.names = TRUE)
# Read and combine all the CSV files
combined <- do.call(rbind, lapply(file_paths, read.csv))
View(combined)
### This file is used to run the analyses in the Supplementary Materials
# load in packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(zoo)
source('model.R')
# function to estimate the probability that an observed tract length is 1 bp
pL_geom_1M <- function(psi, l, phi, M) {
if (l == 1) {return(phi*psi/(phi*psi + psi^2*(1 - phi - (1 - phi)^M)))}
else {return(phi*(1-phi)^(l-1)*psi^2/(phi*psi + psi^2*(1 - phi - (1 - phi)^M)))}
}
# probability mass function of L truncated between 2 and 1500 bp
get_exp_freq_2M <- function(psi, phi, M) {
density <- lapply(2:1500, pL_geom_2M, psi, phi, M) %>% unlist()
return(density)
}
# read coalescent simulation results
file_paths <- list.files("../simulation/results/", pattern = "^l_psi_seed.*\\.csv$", full.names = TRUE)
# Read and combine all the CSV files
combined <- do.call(rbind, lapply(file_paths, read.csv))
# gather all of the observed tract lengths and psi_j values from the 20 regions
sim.0.5.l <- combined$l
sim.0.5.psi <- combined$psi
# only keep observed tract lengths smaller than or equal to 1500 bp
keep <- which(sim.0.5.l <= 1500)
sim.0.5.l <- sim.0.5.l[keep]
sim.0.5.psi <- sim.0.5.psi[keep]
### In this section, we compare the empirical CDF of observed tract lengths from the coalescent simulation to the truncated CDF of L
# comparing freq. of singletons
# estimating the freq. of singletons using the model
sim.est.freq.singletons.M <- lapply(sim.0.5.psi, pL_geom_1M, 1, 1/300, 1500) %>% unlist() %>% mean()
# actual freq. of singletons
sim.obs.cnts <- as.data.frame(sim.0.5.l)
colnames(sim.obs.cnts) = "l"
sim.freq.singletons.M <- sum(sim.obs.cnts$l == 1)/nrow(sim.obs.cnts)
# comparing CDFs
# empirical CDF truncated between 2 and 1500 bp
sim.obs.cnts.df <- sim.obs.cnts %>% filter(l != 1) %>% group_by(l) %>% summarize(counts = n())
sim.obs.freq.df <- sim.obs.cnts.df
sim.obs.freq.df$freq <- sim.obs.freq.df$counts/sum(sim.obs.freq.df$counts)
sim.obs.freq.df$cdf.emp <- cumsum(sim.obs.freq.df$freq)
# CDF of L truncated between 2 and 1500 bp
exp.freq.2M.df <- get_exp_freq_2M(1, 1/300, 1500) %>% as.data.frame()
exp.freq.2M.df$l <- 2:1500
exp.freq.2M.df$cdf.exp <- cumsum(exp.freq.2M.df$.)
# joining the two dataframes
sim.freq.df <- left_join(exp.freq.2M.df, sim.obs.freq.df, by = "l") %>% select(l, cdf.exp, cdf.emp) %>% gather(2:3, key = "exp/emp", value = "cdf")
sim.freq.df$`exp/emp` <- forcats::fct_relevel(sim.freq.df$`exp/emp`, "cdf.exp", "cdf.emp")
# there are NA entries for the empirical CDF, because some observed tract lengths are not found
sim.freq.df$cdf <- na.locf(sim.freq.df$cdf)
# plotting the two CDFs
p1 <- ggplot(sim.freq.df %>% filter(`exp/emp` %in% c("cdf.exp", "cdf.emp")), aes(x = l, y = cdf, color = `exp/emp`)) + geom_line(size = 1, alpha = 0.5) + theme_bw() + labs(y = "Cumulative density", x = expression("\u2113"), color = "") + theme(text = element_text(size=22), plot.title = element_text(hjust = 0)) + ylim(0, 1.01) +
scale_color_manual(
values = c("cdf.exp" = "#000000", "cdf.emp" = "#E41A1C"),
labels = c(expression(F[2]^{1500} * "(" * "\u2113" ~ "|" ~ phi == 300 * ")"), expression(paste(widehat(F), ("\u2113"))))) +
scale_x_continuous(breaks = c(2, 500, 1000, 1500))
p1
ggsave("figs/cdf.p1.png", width = 12, height = 6)
### In this section, we compare the empirical CDF of observed tract lengths from the simulation without LD to the truncated CDF of L
# loading in observed tract lengths and psi_j values from this simulation
sim.tracts <- readRDS("res.geom.rds")
sim.est.freq.singletons.M
### In this section, we compare the empirical CDF of observed tract lengths from the coalescent simulation to the truncated CDF of L
# comparing freq. of singletons
# estimating the freq. of singletons using the model
sim.est.freq.singletons.M <- lapply(sim.0.5.psi, pL_geom_1M, 1, 1/300, 1500) %>% unlist() %>% mean()
sim.est.freq.singletons.M
# actual freq. of singletons
sim.obs.cnts <- as.data.frame(sim.0.5.l)
colnames(sim.obs.cnts) = "l"
sim.freq.singletons.M <- sum(sim.obs.cnts$l == 1)/nrow(sim.obs.cnts)
sim.freq.singletons.M
# comparing CDFs
# empirical CDF truncated between 2 and 1500 bp
sim.obs.cnts.df <- sim.obs.cnts %>% filter(l != 1) %>% group_by(l) %>% summarize(counts = n())
sim.obs.freq.df <- sim.obs.cnts.df
sim.obs.freq.df$freq <- sim.obs.freq.df$counts/sum(sim.obs.freq.df$counts)
sim.obs.freq.df$cdf.emp <- cumsum(sim.obs.freq.df$freq)
# CDF of L truncated between 2 and 1500 bp
exp.freq.2M.df <- get_exp_freq_2M(1, 1/300, 1500) %>% as.data.frame()
exp.freq.2M.df$l <- 2:1500
exp.freq.2M.df$cdf.exp <- cumsum(exp.freq.2M.df$.)
# joining the two dataframes
sim.freq.df <- left_join(exp.freq.2M.df, sim.obs.freq.df, by = "l") %>% select(l, cdf.exp, cdf.emp) %>% gather(2:3, key = "exp/emp", value = "cdf")
sim.freq.df$`exp/emp` <- forcats::fct_relevel(sim.freq.df$`exp/emp`, "cdf.exp", "cdf.emp")
# there are NA entries for the empirical CDF, because some observed tract lengths are not found
sim.freq.df$cdf <- na.locf(sim.freq.df$cdf)
# plotting the two CDFs
p1 <- ggplot(sim.freq.df %>% filter(`exp/emp` %in% c("cdf.exp", "cdf.emp")), aes(x = l, y = cdf, color = `exp/emp`)) + geom_line(size = 1, alpha = 0.5) + theme_bw() + labs(y = "Cumulative density", x = expression("\u2113"), color = "") + theme(text = element_text(size=22), plot.title = element_text(hjust = 0)) + ylim(0, 1.01) +
scale_color_manual(
values = c("cdf.exp" = "#000000", "cdf.emp" = "#E41A1C"),
labels = c(expression(F[2]^{1500} * "(" * "\u2113" ~ "|" ~ phi == 300 * ")"), expression(paste(widehat(F), ("\u2113"))))) +
scale_x_continuous(breaks = c(2, 500, 1000, 1500))
p1
ggsave("figs/cdf.p1.png", width = 12, height = 6)
# read coalescent simulation results
file_paths <- read.csv("l_psi_sim/l_psi_allseeds.csv")
# read coalescent simulation results
l_psi <- read.csv("l_psi_sim/l_psi_allseeds.csv")
View(l_psi)
### This file is used to run the analyses in the Supplementary Materials
# load in packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(zoo)
source('model.R')
# function to estimate the probability that an observed tract length is 1 bp
pL_geom_1M <- function(psi, l, phi, M) {
if (l == 1) {return(phi*psi/(phi*psi + psi^2*(1 - phi - (1 - phi)^M)))}
else {return(phi*(1-phi)^(l-1)*psi^2/(phi*psi + psi^2*(1 - phi - (1 - phi)^M)))}
}
# probability mass function of L truncated between 2 and 1500 bp
get_exp_freq_2M <- function(psi, phi, M) {
density <- lapply(2:1500, pL_geom_2M, psi, phi, M) %>% unlist()
return(density)
}
# read coalescent simulation results
l_psi <- read.csv("l_psi_sim/l_psi_allseeds.csv")
# gather all of the observed tract lengths and psi_j values from the 20 regions
sim.0.5.l <- l_psi$l
sim.0.5.psi <- l_psi$psi
# only keep observed tract lengths smaller than or equal to 1500 bp
keep <- which(sim.0.5.l <= 1500)
sim.0.5.l <- sim.0.5.l[keep]
sim.0.5.psi <- sim.0.5.psi[keep]
### In this section, we compare the empirical CDF of observed tract lengths from the coalescent simulation to the truncated CDF of L
# comparing freq. of singletons
# estimating the freq. of singletons using the model
sim.est.freq.singletons.M <- lapply(sim.0.5.psi, pL_geom_1M, 1, 1/300, 1500) %>% unlist() %>% mean()
sim.est.freq.singletons.M
# actual freq. of singletons
sim.obs.cnts <- as.data.frame(sim.0.5.l)
colnames(sim.obs.cnts) = "l"
sim.freq.singletons.M <- sum(sim.obs.cnts$l == 1)/nrow(sim.obs.cnts)
sim.freq.singletons.M
# comparing CDFs
# empirical CDF truncated between 2 and 1500 bp
sim.obs.cnts.df <- sim.obs.cnts %>% filter(l != 1) %>% group_by(l) %>% summarize(counts = n())
sim.obs.freq.df <- sim.obs.cnts.df
sim.obs.freq.df$freq <- sim.obs.freq.df$counts/sum(sim.obs.freq.df$counts)
sim.obs.freq.df$cdf.emp <- cumsum(sim.obs.freq.df$freq)
# CDF of L truncated between 2 and 1500 bp
exp.freq.2M.df <- get_exp_freq_2M(1, 1/300, 1500) %>% as.data.frame()
exp.freq.2M.df$l <- 2:1500
exp.freq.2M.df$cdf.exp <- cumsum(exp.freq.2M.df$.)
# joining the two dataframes
sim.freq.df <- left_join(exp.freq.2M.df, sim.obs.freq.df, by = "l") %>% select(l, cdf.exp, cdf.emp) %>% gather(2:3, key = "exp/emp", value = "cdf")
sim.freq.df$`exp/emp` <- forcats::fct_relevel(sim.freq.df$`exp/emp`, "cdf.exp", "cdf.emp")
# there are NA entries for the empirical CDF, because some observed tract lengths are not found
sim.freq.df$cdf <- na.locf(sim.freq.df$cdf)
# plotting the two CDFs
p1 <- ggplot(sim.freq.df %>% filter(`exp/emp` %in% c("cdf.exp", "cdf.emp")), aes(x = l, y = cdf, color = `exp/emp`)) + geom_line(size = 1, alpha = 0.5) + theme_bw() + labs(y = "Cumulative density", x = expression("\u2113"), color = "") + theme(text = element_text(size=22), plot.title = element_text(hjust = 0)) + ylim(0, 1.01) +
scale_color_manual(
values = c("cdf.exp" = "#000000", "cdf.emp" = "#E41A1C"),
labels = c(expression(F[2]^{1500} * "(" * "\u2113" ~ "|" ~ phi == 300 * ")"), expression(paste(widehat(F), ("\u2113"))))) +
scale_x_continuous(breaks = c(2, 500, 1000, 1500))
p1
ggsave("figs/cdf.p1.png", width = 12, height = 6)
### In this section, we compare the empirical CDF of observed tract lengths from the simulation without LD to the truncated CDF of L
# loading in observed tract lengths and psi_j values from this simulation
sim.tracts <- readRDS("res.geom.rds")
### In this section, we compare the empirical CDF of observed tract lengths from the simulation without LD to the truncated CDF of L
# loading in observed tract lengths and psi_j values from this simulation
sim.tracts <- readRDS("sim_tracts/res.geom.rds")
sim.tracts.l <- sim.tracts[[1]][[4]]
sim.tracts.psi <- sim.tracts[[1]][[5]]
# filter tracts
keep <- which(sim.tracts.l <= 1500)
sim.tracts.l <- sim.tracts.l[keep]
sim.tracts.psi <- sim.tracts.psi[keep]
# comparing freq. of singletons
# estimating the freq. of singletons using the model
sim.tracts.est.freq.singletons.M <- lapply(sim.tracts.psi, pL_geom_1M, 1, 1/300, 1500) %>% unlist() %>% mean()
# actual freq. of singletons
sim.tracts.obs.cnts <- as.data.frame(sim.tracts.l)
colnames(sim.tracts.obs.cnts) = "l"
sim.tracts.freq.singletons.M <- sum(sim.tracts.obs.cnts$l == 1)/nrow(sim.tracts.obs.cnts)
# comparing CDFs
# empirical CDF truncated between 2 and 1500 bp
sim.tracts.obs.cnts.df <- sim.tracts.obs.cnts %>% filter(l != 1) %>% group_by(l) %>% summarize(counts = n())
sim.tracts.obs.freq.df <- sim.tracts.obs.cnts.df
sim.tracts.obs.freq.df$freq <- sim.tracts.obs.freq.df$counts/sum(sim.tracts.obs.freq.df$counts)
sim.tracts.obs.freq.df$cdf.emp <- cumsum(sim.tracts.obs.freq.df$freq)
# joining the two dataframes
sim.tracts.freq.df <- left_join(exp.freq.2M.df, sim.tracts.obs.freq.df, by = "l") %>% select(l, cdf.exp, cdf.emp) %>% gather(2:3, key = "exp/emp", value = "cdf")
sim.tracts.freq.df$`exp/emp` <- forcats::fct_relevel(sim.tracts.freq.df$`exp/emp`, "cdf.exp", "cdf.emp")
# there are NA entries for the empirical CDF, because some observed tract lengths are not found
sim.tracts.freq.df$cdf <- na.locf(sim.tracts.freq.df$cdf)
# plotting the two CDFs
p2 <- ggplot(sim.tracts.freq.df %>% filter(`exp/emp` %in% c("cdf.exp", "cdf.emp")), aes(x = l, y = cdf, color = `exp/emp`)) + geom_line(size = 1, alpha = 0.5) + theme_bw() + labs(y = "Cumulative density", x = expression("\u2113"), color = "") + theme(text = element_text(size=22), plot.title = element_text(hjust = 0)) + ylim(0, 1.01) +
scale_color_manual(
values = c("cdf.exp" = "#000000", "cdf.emp" = "#E41A1C"),
labels = c(expression(F[2]^{1500} * "(" * "\u2113" ~ "|" ~ phi == 300 * ")"), expression(paste(widehat(F), ("\u2113"))))) +
scale_x_continuous(breaks = c(2, 500, 1000, 1500))
p2
ggsave("figs/cdf.p2.png", width = 12, height = 6)
### This file is used to run the analyses in the Supplementary Materials
# load in packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(zoo)
source('model.R')
# function to estimate the probability that an observed tract length is 1 bp
pL_geom_1M <- function(psi, l, phi, M) {
if (l == 1) {return(phi*psi/(phi*psi + psi^2*(1 - phi - (1 - phi)^M)))}
else {return(phi*(1-phi)^(l-1)*psi^2/(phi*psi + psi^2*(1 - phi - (1 - phi)^M)))}
}
# probability mass function of L truncated between 2 and 1500 bp
get_exp_freq_2M <- function(psi, phi, M) {
density <- lapply(2:1500, pL_geom_2M, psi, phi, M) %>% unlist()
return(density)
}
# read coalescent simulation results
l_psi <- read.csv("l_psi/l_psi_sim.csv")
# gather all of the observed tract lengths and psi_j values from the 20 regions
sim.0.5.l <- l_psi$l
sim.0.5.psi <- l_psi$psi
# only keep observed tract lengths smaller than or equal to 1500 bp
keep <- which(sim.0.5.l <= 1500)
sim.0.5.l <- sim.0.5.l[keep]
sim.0.5.psi <- sim.0.5.psi[keep]
### In this section, we compare the empirical CDF of observed tract lengths from the coalescent simulation to the truncated CDF of L
# comparing freq. of singletons
# estimating the freq. of singletons using the model
sim.est.freq.singletons.M <- lapply(sim.0.5.psi, pL_geom_1M, 1, 1/300, 1500) %>% unlist() %>% mean()
sim.est.freq.singletons.M
# actual freq. of singletons
sim.obs.cnts <- as.data.frame(sim.0.5.l)
colnames(sim.obs.cnts) = "l"
sim.freq.singletons.M <- sum(sim.obs.cnts$l == 1)/nrow(sim.obs.cnts)
sim.freq.singletons.M
# comparing CDFs
# empirical CDF truncated between 2 and 1500 bp
sim.obs.cnts.df <- sim.obs.cnts %>% filter(l != 1) %>% group_by(l) %>% summarize(counts = n())
sim.obs.freq.df <- sim.obs.cnts.df
sim.obs.freq.df$freq <- sim.obs.freq.df$counts/sum(sim.obs.freq.df$counts)
sim.obs.freq.df$cdf.emp <- cumsum(sim.obs.freq.df$freq)
# CDF of L truncated between 2 and 1500 bp
exp.freq.2M.df <- get_exp_freq_2M(1, 1/300, 1500) %>% as.data.frame()
exp.freq.2M.df$l <- 2:1500
exp.freq.2M.df$cdf.exp <- cumsum(exp.freq.2M.df$.)
# joining the two dataframes
sim.freq.df <- left_join(exp.freq.2M.df, sim.obs.freq.df, by = "l") %>% select(l, cdf.exp, cdf.emp) %>% gather(2:3, key = "exp/emp", value = "cdf")
sim.freq.df$`exp/emp` <- forcats::fct_relevel(sim.freq.df$`exp/emp`, "cdf.exp", "cdf.emp")
# there are NA entries for the empirical CDF, because some observed tract lengths are not found
sim.freq.df$cdf <- na.locf(sim.freq.df$cdf)
# plotting the two CDFs
p1 <- ggplot(sim.freq.df %>% filter(`exp/emp` %in% c("cdf.exp", "cdf.emp")), aes(x = l, y = cdf, color = `exp/emp`)) + geom_line(size = 1, alpha = 0.5) + theme_bw() + labs(y = "Cumulative density", x = expression("\u2113"), color = "") + theme(text = element_text(size=22), plot.title = element_text(hjust = 0)) + ylim(0, 1.01) +
scale_color_manual(
values = c("cdf.exp" = "#000000", "cdf.emp" = "#E41A1C"),
labels = c(expression(F[2]^{1500} * "(" * "\u2113" ~ "|" ~ phi == 300 * ")"), expression(paste(widehat(F), ("\u2113"))))) +
scale_x_continuous(breaks = c(2, 500, 1000, 1500))
p1
ggsave("figs/cdf.p1.png", width = 12, height = 6)
### In this section, we compare the empirical CDF of observed tract lengths from the simulation without LD to the truncated CDF of L
# loading in observed tract lengths and psi_j values from this simulation
sim.tracts <- readRDS("l_psi/l_psi_robustness.csv")
### In this section, we compare the empirical CDF of observed tract lengths from the simulation without LD to the truncated CDF of L
# loading in observed tract lengths and psi_j values from this simulation
sim.tracts <- readRDS("l_psi/l_psi_robustness.csv")
# loading in observed tract lengths and psi_j values from this simulation
sim.tracts <- readRDS("l_psi/l_psi_robustness.csv")
# loading in observed tract lengths and psi_j values from this simulation
sim.tracts <- read.csv("l_psi/l_psi_robustness.csv")
### In this section, we compare the empirical CDF of observed tract lengths from the simulation without LD to the truncated CDF of L
# loading in observed tract lengths and psi_j values from this simulation
sim.tracts <- read.csv("l_psi/l_psi_robustness.csv")
sim.tracts.l <- sim.tracts$l
sim.tracts.psi <- sim.tracts$psi
# filter tracts
keep <- which(sim.tracts.l <= 1500)
sim.tracts.l <- sim.tracts.l[keep]
sim.tracts.psi <- sim.tracts.psi[keep]
# comparing freq. of singletons
# estimating the freq. of singletons using the model
sim.tracts.est.freq.singletons.M <- lapply(sim.tracts.psi, pL_geom_1M, 1, 1/300, 1500) %>% unlist() %>% mean()
# actual freq. of singletons
sim.tracts.obs.cnts <- as.data.frame(sim.tracts.l)
colnames(sim.tracts.obs.cnts) = "l"
sim.tracts.freq.singletons.M <- sum(sim.tracts.obs.cnts$l == 1)/nrow(sim.tracts.obs.cnts)
# comparing CDFs
# empirical CDF truncated between 2 and 1500 bp
sim.tracts.obs.cnts.df <- sim.tracts.obs.cnts %>% filter(l != 1) %>% group_by(l) %>% summarize(counts = n())
sim.tracts.obs.freq.df <- sim.tracts.obs.cnts.df
sim.tracts.obs.freq.df$freq <- sim.tracts.obs.freq.df$counts/sum(sim.tracts.obs.freq.df$counts)
sim.tracts.obs.freq.df$cdf.emp <- cumsum(sim.tracts.obs.freq.df$freq)
# joining the two dataframes
sim.tracts.freq.df <- left_join(exp.freq.2M.df, sim.tracts.obs.freq.df, by = "l") %>% select(l, cdf.exp, cdf.emp) %>% gather(2:3, key = "exp/emp", value = "cdf")
sim.tracts.freq.df$`exp/emp` <- forcats::fct_relevel(sim.tracts.freq.df$`exp/emp`, "cdf.exp", "cdf.emp")
# there are NA entries for the empirical CDF, because some observed tract lengths are not found
sim.tracts.freq.df$cdf <- na.locf(sim.tracts.freq.df$cdf)
# plotting the two CDFs
p2 <- ggplot(sim.tracts.freq.df %>% filter(`exp/emp` %in% c("cdf.exp", "cdf.emp")), aes(x = l, y = cdf, color = `exp/emp`)) + geom_line(size = 1, alpha = 0.5) + theme_bw() + labs(y = "Cumulative density", x = expression("\u2113"), color = "") + theme(text = element_text(size=22), plot.title = element_text(hjust = 0)) + ylim(0, 1.01) +
scale_color_manual(
values = c("cdf.exp" = "#000000", "cdf.emp" = "#E41A1C"),
labels = c(expression(F[2]^{1500} * "(" * "\u2113" ~ "|" ~ phi == 300 * ")"), expression(paste(widehat(F), ("\u2113"))))) +
scale_x_continuous(breaks = c(2, 500, 1000, 1500))
p2
ggsave("figs/cdf.p2.png", width = 12, height = 6)
### In this section, we compare the empirical CDF of observed tract lengths from the simulation without LD to the truncated CDF of L
# loading in observed tract lengths and psi_j values from this simulation
sim.tracts <- read.csv("l_psi/l_psi_robustness.csv")
sim.tracts.l <- sim.tracts$l
sim.tracts.psi <- sim.tracts$psi
# filter tracts
keep <- which(sim.tracts.l <= 1500)
sim.tracts.l <- sim.tracts.l[keep]
sim.tracts.psi <- sim.tracts.psi[keep]
# comparing freq. of singletons
# estimating the freq. of singletons using the model
sim.tracts.est.freq.singletons.M <- lapply(sim.tracts.psi, pL_geom_1M, 1, 1/100, 1500) %>% unlist() %>% mean()
# actual freq. of singletons
sim.tracts.obs.cnts <- as.data.frame(sim.tracts.l)
colnames(sim.tracts.obs.cnts) = "l"
sim.tracts.freq.singletons.M <- sum(sim.tracts.obs.cnts$l == 1)/nrow(sim.tracts.obs.cnts)
# comparing CDFs
# empirical CDF truncated between 2 and 1500 bp
sim.tracts.obs.cnts.df <- sim.tracts.obs.cnts %>% filter(l != 1) %>% group_by(l) %>% summarize(counts = n())
sim.tracts.obs.freq.df <- sim.tracts.obs.cnts.df
sim.tracts.obs.freq.df$freq <- sim.tracts.obs.freq.df$counts/sum(sim.tracts.obs.freq.df$counts)
sim.tracts.obs.freq.df$cdf.emp <- cumsum(sim.tracts.obs.freq.df$freq)
# joining the two dataframes
sim.tracts.freq.df <- left_join(exp.freq.2M.df, sim.tracts.obs.freq.df, by = "l") %>% select(l, cdf.exp, cdf.emp) %>% gather(2:3, key = "exp/emp", value = "cdf")
sim.tracts.freq.df$`exp/emp` <- forcats::fct_relevel(sim.tracts.freq.df$`exp/emp`, "cdf.exp", "cdf.emp")
# there are NA entries for the empirical CDF, because some observed tract lengths are not found
sim.tracts.freq.df$cdf <- na.locf(sim.tracts.freq.df$cdf)
# plotting the two CDFs
p2 <- ggplot(sim.tracts.freq.df %>% filter(`exp/emp` %in% c("cdf.exp", "cdf.emp")), aes(x = l, y = cdf, color = `exp/emp`)) + geom_line(size = 1, alpha = 0.5) + theme_bw() + labs(y = "Cumulative density", x = expression("\u2113"), color = "") + theme(text = element_text(size=22), plot.title = element_text(hjust = 0)) + ylim(0, 1.01) +
scale_color_manual(
values = c("cdf.exp" = "#000000", "cdf.emp" = "#E41A1C"),
labels = c(expression(F[2]^{1500} * "(" * "\u2113" ~ "|" ~ phi == 300 * ")"), expression(paste(widehat(F), ("\u2113"))))) +
scale_x_continuous(breaks = c(2, 500, 1000, 1500))
p2
ggsave("figs/cdf.p2.png", width = 12, height = 6)
