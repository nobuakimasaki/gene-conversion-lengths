group_by(group_id) %>%
summarize(
first_marker = min(V2),
last_marker = max(V3),
first_pos = min(V4),
last_pos = max(V5),
hotspot = first(hotspot)) %>%
select(-group_id)
recomb.hotspots.chr$length <- recomb.hotspots.chr$last_pos - recomb.hotspots.chr$first_pos + 1
recomb.hotspots.chr$chr <- chr
return(recomb.hotspots.chr)
}
hotspots.chrs <- lapply(1:22, get_hotspots)
saveRDS(hotspots.chrs, "hotspots.RDS")
hotspots.chrs.combined <- do.call(rbind, hotspots.chrs)
quantile(lapply(res.hotspot[[5]], function(x) {x[[1]]}) %>% unlist(), probs = c(0.025, 0.975))
quantile(lapply(res.hotspot[[5]], function(x) {x[[2]]}) %>% unlist(), probs = c(0.025, 0.975))
quantile(lapply(res.not.hotspot[[5]], function(x) {x[[1]]}) %>% unlist(), probs = c(0.025, 0.975))
quantile(lapply(res.not.hotspot[[5]], function(x) {x[[2]]}) %>% unlist(), probs = c(0.025, 0.975))
2 + 2*res.hotspot[[1]][[2]]
2 + 2*res.hotspot[[2]][[2]]
2 + 2*res.not.hotspot[[1]][[2]]
2 + 2*res.not.hotspot[[2]][[2]]
?optim
pL_geom_2M_mixture(1, 0.01, 0.4, 0.1, 0.5, 1)
source("fns_sim.R")
pL_geom_2M_mixture <- function(l, psi, w1, phi1, phi2, M) {
w2 <- 1 - w1
num <- w1*pL_geom_2(l, psi, phi1) + w2*pL_geom_2(l, psi, phi2)
denom <- w1*pL_geom_2_to_M(l, psi, phi1, M) + w2*pL_geom_2_to_M(l, psi, phi2, M)
return(num/denom)
}
pL_geom_2M_mixture(1, 0.01, 0.4, 0.1, 0.5, 1)
pL_geom_2M_mixture(5, 0.01, 0.4, 0.1, 0.5, 7)
pL_geom_2M_mixture(2:7, 0.01, 0.4, 0.1, 0.5, 7)
lapply(2:7, pL_geom_2M_mixture, 0.01, 0.4, 0.1, 0.5, 7)
lapply(2:7, pL_geom_2M_mixture, 0.01, 0.4, 0.1, 0.5, 7) %>% unlist() %>% sum()
library(dplyr)
lapply(2:7, pL_geom_2M_mixture, 0.01, 0.4, 0.1, 0.5, 7) %>% unlist() %>% sum()
lapply(2:7, pL_geom_2M_mixture, 0.01, 0.4, 0.1, 0.5, 7) %>% unlist() %>% sum()
exp(1)
seq_along(c(1,2,5,4))
exp(-10)
exp(-5)
log(0.005)
exp(-5.298317)
exp(-5)
log(c(0.005, 0.005, 0.005))
View(neg_log_lik_mixture)
exp(c(-5.298317   ,-6.129027, -286.675134))
w1 = exp(-5.298317)
w2 = 1-w1
w2
w1
phi1 = 1/2.178700e-03
phi1
phi2 = 3.151891e-125
phi2 = 1/3.151891e-125
phi2
readRDS("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.rds")
res <- readRDS("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.rds")
res[[3]]
res_mixture <- res[[3]]
res_mixture$par
exp(res_mixture$par)
phi2 <- exp(res_mixture$par)[0]
w1 <- exp(res_mixture$par)[0]
phi1 <- exp(res_mixture$par)[0]
phi2 <- exp(res_mixture$par)[0]
mean1 <- 1/phi1
w1 <- exp(res_mixture$par)[0]
phi1 <- exp(res_mixture$par)[1]
phi2 <- exp(res_mixture$par)[2]
w1 <- exp(res_mixture$par)[1]
phi1 <- exp(res_mixture$par)[2]
phi2 <- exp(res_mixture$par)[3]
mean1 <- 1/phi1
mean2 <- 1/phi2
w2 <- 1 - w1
mean <- w1*mean1 + w2*mean2
l <- res[[4]]
psi <- res[[5]]
psi
res <- readRDS("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.rds")
l <- res[[4]]
psi <- res[[5]]
initial_guess <- log(c(0.005, 0.005, 0.005))
optim.out.mixture <- optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi_lst, l_lst = l_lst, M = M,
control = list(trace = 1))
source("fns_sim.R")
optim.out.mixture <- optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi_lst, l_lst = l_lst, M = M,
control = list(trace = 1))
optim.out.mixture <- optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi, l_lst = l, M = M,
control = list(trace = 1))
optim.out.mixture <- optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi, l_lst = l, M = M,
control = list(trace = 1))
l
optim.out.mixture <- optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi, l_lst = l, M = 1500,
control = list(trace = 1))
source("fns_sim.R")
optim.out.mixture <- optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi, l_lst = l, M = 1500,
control = list(trace = 1))
neg_log_lik_mixture(log(c(0.005, 0.005, 0.005)), psi_lst = psi, l_lst = l, M = 1500)
neg_log_lik_mixture(log(c(0.005, 0.005, 0.005)), psi_lst = psi, l_lst = l, M = 1500)
neg_log_lik_mixture(log(c(0.005, 0.003, 0.003)), psi_lst = psi, l_lst = l, M = 1500)
-neg_log_lik_mixture(log(c(0.005, 0.003, 0.003)), psi_lst = psi, l_lst = l, M = 1500)
optim.out.mixture <- optim(par = initial_guess, neg_log_lik_mixture, method = "SANN",
psi_lst = psi, l_lst = l, M = 1500,
control = list(trace = 1))
?optim
optim_mixture <- function(w1, psi_lst, l_lst) {
initial_guess <- log(c(0.005, 0.005))
return(optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi_lst, l_lst = l_lst, M = 1500, w1 = w1,
control = list(trace = 1)))
}
res <- lapply(seq(0.05, 0.495, 0.05), optim_mixture, psi_lst, l_lst)
source("fns_sim.R")
optim_mixture <- function(w1, psi_lst, l_lst) {
initial_guess <- log(c(0.005, 0.005))
return(optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi_lst, l_lst = l_lst, M = 1500, w1 = w1,
control = list(trace = 1)))
}
res <- lapply(seq(0.05, 0.495, 0.05), optim_mixture, psi_lst, l_lst)
initial_guess <- log(c(0.005, 0.005))
optim_mixture <- function(w1, psi_lst, l_lst) {
initial_guess <- log(c(0.005, 0.005))
return(optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi_lst, l_lst = l_lst, M = 1500, w1 = w1,
control = list(trace = 1)))
}
res <- lapply(seq(0.05, 0.495, 0.05), optim_mixture, psi, l)
neg_log_lik_mixture <- function(par, psi_lst, l_lst, M, w1) {
phi1 <- exp(par[1])
phi2 <- exp(par[2])
lik_lst <- mclapply(seq_along(l_lst),
function(i) {pL_geom_2M_mixture(l_lst[[i]], psi_lst[[i]], w1, phi1, phi2, M)},
mc.cores = detectCores() - 1)
nll <- -sum(log(unlist(lik_lst)))
print("par:")
print(exp(par))
print("mean:")
print(w1*1/phi1 + (1-w1)*1/phi2)
print("lik")
print(-nll)
return(nll)
}
source("fns_sim.R")
library(dplyr)
optim_mixture <- function(w1, psi_lst, l_lst) {
initial_guess <- log(c(0.005, 0.005))
return(optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi_lst, l_lst = l_lst, M = 1500, w1 = w1,
control = list(trace = 1)))
}
res <- lapply(seq(0.05, 0.495, 0.05), optim_mixture, psi, l)
pL_geom_2 <- function(l, psi, phi) {
C <- phi+psi-phi*psi
if (l >= 2) {return(phi*(1-phi)^(l-1)*psi^2/(C^2))}
else (return(NULL))
}
pL_geom_2_to_M <- function(l, psi, phi, M) {
C <- phi+psi-phi*psi
return(psi^2*((1-phi)-(1-phi)^M)/(C^2))
}
pL_geom_2M_alt <- function(l, psi, phi, M) {
return(pL_geom_2(l, psi, phi)/pL_geom_2_to_M(l, psi, phi, M))
}
source("fns_sim.R")
library(dplyr)
pL_geom_2M_alt(1, 0.02, 0.03, 1499)
pL_geom_2M_alt(4, 0.02, 0.03, 1499)
### testing functions
pL_geom_2M(4, 0.02, 0.03, 1499)
pL_geom_2M_alt(4, 0.02, 0.03, 1499)
pL_geom_2M_mixture(4, 0.02, 0.4, 0.03, 0.03, 1499)
pL_geom_2M_alt(4, 0.02, 0.03, 1499)
pL_geom_2M_mixture(4, 0.02, 0.4, 0.03, 0.03, 1499)
pL_geom_2M_mixture(4, 0.02, 0.1, 0.03, 0.03, 1499)
pL_geom_2M_mixture(4, 0.02, 0.1, 0.04, 0.03, 1499)
pL_geom_2M_alt(4, 0.02, 0.03, 1499)
pL_geom_2M_mixture(4, 0.02, 0.1, 0.04, 0.03, 1499)
pL_geom_2M_mixture(4, 0.02, 0.1, 0.04, 0.03, 1499)
neg_log_lik_mixture(exp(c(0.05, 0.05)), psi, l, 1500, 0.5)
pL_geom_2M(4, 0.02, 0.03, 1499)
pL_geom_2M_alt(4, 0.02, 0.03, 1499)
pL_geom_2M_mixture(4, 0.02, 0.1, 0.04, 0.03, 1499)
res <- readRDS("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.rds")
l <- res[[4]]
psi <- res[[5]]
neg_log_lik_mixture(exp(c(0.05, 0.05)), psi, l, 1500, 0.5)
neg_log_lik_mixture(log(c(0.05, 0.05)), psi, l, 1500, 0.5)
neg_log_lik(0.05, psi, pL_geom_2M, l, 1500)
library(purr)
library(purer)
library(purrr)
neg_log_lik(0.05, psi, pL_geom_2M, l, 1500)
neg_log_lik_mixture(log(c(0.05, 0.05)), psi, l, 1500, 0.5)
l_lst <- res[[4]]
psi_lst <- res[[5]]
neg_log_lik_mixture(log(c(0.05, 0.05)), psi_lst, l_lst, 1500, 0.5)
neg_log_lik(0.05, psi_lst, pL_geom_2M, l_lst, 1500)
### optimization
optim_mixture <- function(w1, psi_lst, l_lst) {
initial_guess <- log(c(0.005, 0.005))
return(optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi_lst, l_lst = l_lst, M = 1500, w1 = w1,
control = list(trace = 1)))
}
### optimization
optim_mixture <- function(w1, psi_lst, l_lst) {
initial_guess <- log(c(0.005, 0.005))
return(optim(par = initial_guess, neg_log_lik_mixture, method = "BFGS",
psi_lst = psi_lst, l_lst = l_lst, M = 1500, w1 = w1,
control = list(trace = 1)))
}
res <- lapply(seq(0.03, 0.495, 0.05), optim_mixture, psi, l)
phi1 <- par[1]
source("fns_sim.R")
### optimization
optim_mixture <- function(w1, psi_lst, l_lst) {
initial_guess <- c(0.005, 0.005)
return(optim(par = initial_guess, neg_log_lik_mixture, method = "L-BFGS-B",
lower = c(0.001, 0.001),
upper = c(0.1, 0.1),
psi_lst = psi_lst, l_lst = l_lst, M = 1500, w1 = w1,
control = list(trace = 1)))
}
res <- lapply(seq(0.03, 0.495, 0.05), optim_mixture, psi, l)
source("fns_sim.R")
### optimization
optim_mixture <- function(w1, psi_lst, l_lst) {
initial_guess <- c(0.005, 0.005)
return(optim(par = initial_guess, neg_log_lik_mixture, method = "L-BFGS-B",
lower = c(0.001, 0.001),
upper = c(0.1, 0.1),
psi_lst = psi_lst, l_lst = l_lst, M = 1500, w1 = w1,
control = list(trace = 1)))
}
res <- lapply(seq(0.03, 0.495, 0.05), optim_mixture, psi, l)
res <- lapply(seq(0.05, 0.495, 0.05), optim_mixture, psi, l)
res
res
pars <- lapply(res, function(x) {x$par})
View(pars)
pars <- lapply(res, function(x) {c(x$par[1], x$par[2]})
pars <- lapply(res, function(x) {c(x$par[1], x$par[2]})
pars <- lapply(res, function(x) {c(x$par[1], x$par[2])}
pars <- lapply(res, function(x) {c(x$par[1], x$par[2])})
pars <- lapply(res, function(x) {c(x$par[1], x$par[2])})
pars
pars <- lapply(res, function(x) {c(x$par[1], x$par[2])}) %>% unlist() %>% matrix(nrow = 2, byrow = TRUE)
pars <- lapply(res, function(x) {c(x$par[1], x$par[2])}) %>% unlist() %>% matrix(ncol = 2, byrow = TRUE)
res_iter <- res
pars <- lapply(res, function(x) {c(x$par[1], x$par[2])}) %>% unlist() %>% matrix(ncol = 2, byrow = TRUE)
colnames(pars) <- c("phi1", "phi2")
pars$w1 <- seq(0.05, 0.495, 0.05)
pars <- lapply(res, function(x) {c(x$par[1], x$par[2])}) %>% unlist() %>% matrix(ncol = 2, byrow = TRUE) %>% as.data.frame()
colnames(pars) <- c("phi1", "phi2")
pars$w1 <- seq(0.05, 0.495, 0.05)
res
View(pars)
pars$mean_len <- pars$w1*1/pars$phi1 + (1-pars$w1)*1/pars$phi2
pars$nll <- lapply(res, function(x) {c(x$value)}) %>% unlist()
which(pars$nll == min(pars$nll))
saveRDS(pars, "test.RDS")
source("fns_sim.R")
1/0.0005
initial_guess <- c(0.005, 0.005, 0.005)
res2 <- optim(par = initial_guess, neg_log_lik_mixture_w1, method = "L-BFGS-B",
lower = c(0.0005, 0.0005, 0.001),
upper = c(0.1, 0.1, 0.5),
psi_lst = psi_lst, l_lst = l_lst, M = 1500,
control = list(trace = 1))
1/0.0005
1/0.05
initial_guess <- c(0.005, 0.005, 0.005)
res2 <- optim(par = initial_guess, neg_log_lik_mixture_w1, method = "L-BFGS-B",
lower = c(0.0005, 0.0005, 0.001),
upper = c(0.05, 0.05, 0.5),
psi_lst = psi_lst, l_lst = l_lst, M = 1500,
control = list(trace = 1))
optim_mixture2 <- function(w1, psi_lst, l_lst) {
initial_guess <- c(0.005, 0.005)
return(optim(par = initial_guess, neg_log_lik_mixture, method = "L-BFGS-B",
lower = c(0.0005, 0.0005),
upper = c(0.05, 0.05),
psi_lst = psi_lst, l_lst = l_lst, M = 1500, w1 = w1,
control = list(trace = 1)))
}
res2 <- lapply(seq(0.05, 0.495, 0.05), optim_mixture2, psi, l)
res_geom <- optim(par = 0.005, neg_log_lik, method = "Brent",
lower = 0.0005,
upper = 0.05,
psi_lst = psi_lst, pL = pL_geom_2M, l_lst = l_lst, M = 1500,
control = list(trace = 1))
res_geom$par
1/res_geom$par
res_geom$value
res2 <- lapply(seq(0.05, 0.495, 0.05), optim_mixture2, psi, l)
res2 <- lapply(seq(0.05, 0.495, 0.05), optim_mixture2, psi, l)
pars2 <- lapply(res2, function(x) {c(x$par[1], x$par[2])}) %>% unlist() %>% matrix(ncol = 2, byrow = TRUE) %>% as.data.frame()
colnames(pars2) <- c("phi1", "phi2")
pars2$w1 <- seq(0.05, 0.495, 0.05)
pars2$mean_len <- pars2$w1*1/pars2$phi1 + (1-pars2$w1)*1/pars2$phi2
pars2$nll <- lapply(res2, function(x) {c(x$value)}) %>% unlist()
which(pars2$nll == min(pars2$nll))
View(pars2)
w1_grid <- seq(0.05, 0.495, 0.025)
?optim
boot_MLE_M()
boot_MLE_M <- function(x, l_lst, psi_lst, M) {
ind <- sample(1:length(l_lst), replace = TRUE)
l_lst_boot <- l_lst[ind]
psi_lst_boot <- psi_lst[ind]
optim.out.geom <- optim(0.005, neg_log_lik, psi_lst = psi_lst_boot, pL = pL_geom_2M,
l_lst = l_lst_boot, M = M, lower = 0.0001, upper = 0.05, method = "Brent")
optim.out.geom2 <- optim(0.005, neg_log_lik, psi_lst = psi_lst_boot, pL = pL_geom2_2M,
l_lst = l_lst_boot, M = M, lower = 0.0001, upper = 0.05, method = "Brent")
### maximum likelihood for mixture
w1_grid <- seq(0.05, 0.495, 0.025)
optim.out.mixture <- lapply(w1_grid, optim_mixture, psi_lst_boot, l_lst_boot, M)
optim.out.mixture.par <- lapply(optim.out.mixture, function(x) {x$par})
optim.out.mixture.conv <- lapply(optim.out.mixture, function(x) {x$convergence})
print("finished 1 bootstrap iteration")
return(c(1/optim.out.geom$par, 2/optim.out.geom2$par, optim.out.mixture.par, optim.out.mixture.conv))
}
seed <- 2
paste0("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.", seed, ".rds")
as.integer("2")
readRDS("new_res/res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.1.rds")
res1 <- readRDS("new_res/res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.1.rds")
View(res1)
res1
res1[[1]]
res2 <- readRDS("new_res/res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.2.rds")
res1[[1]]
res2[[1]]
res1[[2]]
2/0.003079939
res1[[3]]
res_mixture <- res1[[3]]
View(res_mixture)
lapply(res_mixture, function(x) {x$par, x$convergence})
lapply(res_mixture, function(x) {c(x$par, x$convergence)})
?matrix
lapply(res_mixture, function(x) {c(x$par, x$convergence)}) %>% unlist() %>% matrix(byrow = TRUE)
library(dplyr)
res1 <- readRDS("new_res/res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.1.rds")
res2 <- readRDS("new_res/res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.2.rds")
lapply(res_mixture, function(x) {c(x$par, x$convergence)}) %>% unlist() %>% matrix(byrow = TRUE)
lapply(res_mixture, function(x) {c(x$par, x$convergence)}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 3)
res_mixture <- res1[[3]]
res_mixture <- lapply(res_mixture, function(x) {c(x$par, x$convergence)}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 3)
res_mixture2 <- res2[[3]]
res_mixture2 <- lapply(res_mixture2, function(x) {c(x$par, x$convergence)}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 3)
View(res_mixture2)
View(res_mixture)
View(res_mixture2)
View(res_mixture)
res_mixture <- lapply(res_mixture, function(x) {c(x$par, x$convergence)}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 3) %>% as.data.frame()
res_mixture <- res1[[3]]
res_mixture <- lapply(res_mixture, function(x) {c(x$par, x$convergence)}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 3) %>% as.data.frame()
res_mixture <- res1[[3]]
res_mixture_df <- lapply(res_mixture, function(x) {c(x$par, x$convergence)}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 3) %>% as.data.frame()
View(res_mixture_df)
colnames(res_mixture_df) <- c("phi1", "phi2")
colnames(res_mixture_df) <- c("phi1", "phi2", "conv")
res_mixture_df$w1 <- seq(0.05, 0.495, 0.025)
res_mixture_df <- lapply(res_mixture, function(x) {c(x$par, x$convergence, x$value)}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 4) %>% as.data.frame()
colnames(res_mixture_df) <- c("phi1", "phi2", "conv", "nll")
res_mixture_df$w1 <- seq(0.05, 0.495, 0.025)
?with
res_mixture_df$mean <- with(res_mixture_df, w1*(1/phi1) + (1-w1)*(1/phi2))
?optim
library(GenSA)
source("UK_biobank/fns_sim.R")
source("UK_biobank/fns_sim.R")
source("UK_biobank/fns_sim.R")
source("UK_biobank/fns_sim.R")
source("fns_sim.R")
library(dplyr)
library(purrr)
library(ggplot2)
### testing functions
pL_geom_2M(4, 0.02, 0.03, 1499)
pL_geom_2M_alt(4, 0.02, 0.03, 1499)
pL_geom_2M_mixture(4, 0.02, 0.1, 0.04, 0.03, 1499)
### load l and psi
res <- readRDS("new_res/res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.1.rds")
l_lst <- res[[5]]
psi_lst <- res[[6]]
optim_mixture <- function(w1, psi_lst, l_lst, M) {
initial_guess <- c(0.005, 0.005)
return(optim(par = initial_guess, neg_log_lik_mixture, method = "L-BFGS-B",
lower = c(0.0005, 0.0005),
upper = c(0.05, 0.05),
psi_lst = psi_lst, l_lst = l_lst, M = M, w1 = w1,
control = list(trace = 1)))
}
### maximum likelihood for mixture
w1_grid <- seq(0.05, 0.495, 0.025)
optim.out.mixture <- lapply(w1_grid, optim_mixture, psi_lst, l_lst, 1500)
library(GenSA)
source("fns_sim.R")
library(dplyr)
library(purrr)
library(ggplot2)
library(GenSA)
### testing functions
pL_geom_2M(4, 0.02, 0.03, 1499)
pL_geom_2M_alt(4, 0.02, 0.03, 1499)
pL_geom_2M_mixture(4, 0.02, 0.1, 0.04, 0.03, 1499)
### load l and psi
res <- readRDS("new_res/res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.1.rds")
l_lst <- res[[5]]
psi_lst <- res[[6]]
optim_mixture <- function(w1, psi_lst, l_lst, M) {
initial_guess <- c(0.005, 0.005)
return(GenSA(par = initial_guess, neg_log_lik_mixture,
lower = c(0.0005, 0.0005),
upper = c(0.05, 0.05),
psi_lst = psi_lst, l_lst = l_lst, M = M, w1 = w1,
control = list(trace.mat = TRUE)))
}
### maximum likelihood for mixture
w1_grid <- seq(0.05, 0.495, 0.025)
optim.out.mixture <- lapply(w1_grid, optim_mixture, psi_lst, l_lst, 1500)
res_mixture <- res1[[3]]
res_mixture_df <- lapply(res_mixture, function(x) {c(x$par, x$convergence, x$value)}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 4) %>% as.data.frame()
colnames(res_mixture_df) <- c("phi1", "phi2", "conv", "nll")
res_mixture_df$w1 <- seq(0.05, 0.495, 0.025)
res_mixture_df$mean <- with(res_mixture_df, w1*(1/phi1) + (1-w1)*(1/phi2))
View(res_mixture_df)
res_boot <- res1[[4]]
View(res_boot)
res_boot[[1]]
lapply(res_boot, function(x) {x[[1]]})
res_boot[[1]]
lapply(res_boot, function(x) {x[[3:20]]})
lapply(res_boot, function(x) {x[3:20]})
ests <- lapply(res_boot, function(x) {x[3:20]}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 2) %>% as.data.frame()
View(ests)
ests$w1 <- seq(0.05, 0.495, 0.025)
270/18
colnames(ests) <- c("phi1", "phi2", "w1")
ests$mean <- with(ests, w1*(1/phi1) + (1-w1)*(1/phi2))
ests$conv <- lapply(res_boot, function(x) {x[21:38]}) %>% unlist()
w1_grid <- seq(0.025, 0.495, 0.025)
w1
w1_grid
seq(0.025, 0.5, 0.025)
?optim
res <- readRDS("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.26.point.estrds")
res <- readRDS("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.26.point.est.rds")
View(res)
res_mixture <- res[[3]]
res <- readRDS("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.26.point.est.rds")
res_mixture <- res[[3]]
View(res_mixture)
lapply(res_mixture, function(x) {x[[1]]})
lapply(res_mixture, function(x) {c(x[[1]], x[[4]], x[[7]], x[[10]])})
est_par <- lapply(res_mixture, function(x) {c(x[[1]], x[[4]], x[[7]], x[[10]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 8)
View(est_par)
nll <- lapply(res_mixture, function(x) {c(x[[2]], x[[5]], x[[8]], x[[11]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 8)
View(est_par)
res <- readRDS("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.26.point.est.rds")
res_mixture <- res[[3]]
est_par <- lapply(res_mixture, function(x) {c(x[[1]], x[[4]], x[[7]], x[[10]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 2)
nll <- lapply(res_mixture, function(x) {c(x[[2]], x[[5]], x[[8]], x[[11]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 1)
conv <- lapply(res_mixture, function(x) {c(x[[3]], x[[6]], x[[9]], x[[12]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 1)
est_par <- lapply(res_mixture, function(x) {c(x[[1]], x[[4]], x[[7]], x[[10]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 2) %>% as.data.frame()
res <- readRDS("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.26.point.est.rds")
res_mixture <- res[[3]]
est_par_df <- lapply(res_mixture, function(x) {c(x[[1]], x[[4]], x[[7]], x[[10]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 2) %>% as.data.frame()
est_par_df$nll <- lapply(res_mixture, function(x) {c(x[[2]], x[[5]], x[[8]], x[[11]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 1)
est_par_df$conv <- lapply(res_mixture, function(x) {c(x[[3]], x[[6]], x[[9]], x[[12]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 1)
est_par_df$w1 <- rep(seq(0.025, 0.5, 0.025), each = 4)
View(est_par)
View(est_par_df)
colnames(res_mixture_df) <- c("phi1", "phi2", "nll", "conv", "w1")
colnames(est_par_df) <- c("phi1", "phi2", "nll", "conv", "w1")
est_par_df$mean <- with(est_par_df, w1*(1/phi1) + (1-w1)*(1/phi2))
est_par_df$w1 <- rep(seq(0.025, 0.5, 0.025), each = 4)
colnames(est_par_df) <- c("phi1", "phi2", "nll", "conv", "w1")
res <- readRDS("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.26.point.est.rds")
res_mixture <- res[[3]]
est_par_df <- lapply(res_mixture, function(x) {c(x[[1]], x[[4]], x[[7]], x[[10]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 2) %>% as.data.frame()
est_par_df$nll <- lapply(res_mixture, function(x) {c(x[[2]], x[[5]], x[[8]], x[[11]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 1)
est_par_df$conv <- lapply(res_mixture, function(x) {c(x[[3]], x[[6]], x[[9]], x[[12]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 1)
est_par_df$w1 <- rep(seq(0.025, 0.5, 0.025), each = 4)
colnames(est_par_df) <- c("phi1", "phi2", "nll", "conv", "w1")
View(est_par)
View(est_par_df)
colnames(est_par_df)
View(est_par_df)
res <- readRDS("res.UK_Biobank.1M.1500.region.5000.ibdclust2cM.MAF.0.5.boot.grouped.keep.ends.mixture.26.point.est.rds")
res_mixture <- res[[3]]
est_par_df <- lapply(res_mixture, function(x) {c(x[[1]], x[[4]], x[[7]], x[[10]])}) %>% unlist() %>% matrix(byrow = TRUE, ncol = 2) %>% as.data.frame()
est_par_df$nll <- lapply(res_mixture, function(x) {c(x[[2]], x[[5]], x[[8]], x[[11]])}) %>% unlist()
est_par_df$conv <- lapply(res_mixture, function(x) {c(x[[3]], x[[6]], x[[9]], x[[12]])}) %>% unlist()
est_par_df$w1 <- rep(seq(0.025, 0.5, 0.025), each = 4)
colnames(est_par_df) <- c("phi1", "phi2", "nll", "conv", "w1")
est_par_df$mean <- with(est_par_df, w1*(1/phi1) + (1-w1)*(1/phi2))
?optim
