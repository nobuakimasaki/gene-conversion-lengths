mean = "Overall Mean",
mean1 = "phi[1]",
mean2 = "phi[2]"))
# Then plot:
ggplot(mixture_long %>% filter(parameter != "w1"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
facet_wrap(~parameter, labeller = label_parsed) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 350)) +
geom_hline(yintercept = 300, linetype = "dotted") +
theme_bw() +
labs(x = "Replicate", y = "Estimate (bp)")
# Long format for mixture model
df_min_aic_mixture <- df_min_aic %>% filter(model == "mixture")
# Main estimates
df_long <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1, mean1, mean2, mean),
names_to = "parameter", values_to = "est") %>%
select(seed, parameter, est)
# 2.5% quantiles
df_long_2.5 <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1_q2.5, mean1_q2.5, mean2_q2.5, mean_q2.5),
names_to = "parameter", values_to = "q2.5") %>%
mutate(parameter = gsub("_q2\\.5", "", parameter)) %>%
select(seed, parameter, q2.5)
# 97.5% quantiles
df_long_97.5 <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1_q97.5, mean1_q97.5, mean2_q97.5, mean_q97.5),
names_to = "parameter", values_to = "q97.5") %>%
mutate(parameter = gsub("_q97\\.5", "", parameter)) %>%
select(seed, parameter, q97.5)
# Merge everything
mixture_long <- df_long %>%
left_join(df_long_2.5, by = c("seed", "parameter")) %>%
left_join(df_long_97.5, by = c("seed", "parameter"))
# Plot mixture model (w1)
ggplot(mixture_long %>% filter(parameter == "w1"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1)) +
theme_bw() +
labs(x = "Replicate", y = expression("Estimate of " * w[1]))
mixture_long <- mixture_long %>%
mutate(parameter = recode(parameter,
mean = "Overall Mean",
mean1 = "phi[1]",
mean2 = "phi[2]"))
# Then plot:
ggplot(mixture_long %>% filter(parameter != "w1"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
facet_wrap(~parameter, labeller = label_parsed) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 350)) +
geom_hline(yintercept = 300, linetype = "dotted") +
theme_bw() +
labs(x = "Replicate", y = "Estimate (bp)")
# Long format for mixture model
df_min_aic_mixture <- df_min_aic %>% filter(model == "mixture")
# Main estimates
df_long <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1, mean1, mean2, mean),
names_to = "parameter", values_to = "est") %>%
select(seed, parameter, est)
# 2.5% quantiles
df_long_2.5 <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1_q2.5, mean1_q2.5, mean2_q2.5, mean_q2.5),
names_to = "parameter", values_to = "q2.5") %>%
mutate(parameter = gsub("_q2\\.5", "", parameter)) %>%
select(seed, parameter, q2.5)
# 97.5% quantiles
df_long_97.5 <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1_q97.5, mean1_q97.5, mean2_q97.5, mean_q97.5),
names_to = "parameter", values_to = "q97.5") %>%
mutate(parameter = gsub("_q97\\.5", "", parameter)) %>%
select(seed, parameter, q97.5)
# Merge everything
mixture_long <- df_long %>%
left_join(df_long_2.5, by = c("seed", "parameter")) %>%
left_join(df_long_97.5, by = c("seed", "parameter"))
# Plot mixture model (w1)
ggplot(mixture_long %>% filter(parameter == "w1"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1)) +
theme_bw() +
labs(x = "Replicate", y = expression("Estimate of " * w[1]))
mixture_long <- mixture_long %>%
mutate(parameter = recode(parameter,
mean = "Overall~Mean",
mean1 = "phi[1]",
mean2 = "phi[2]"))
# Then plot:
ggplot(mixture_long %>% filter(parameter != "w1"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
facet_wrap(~parameter, labeller = label_parsed) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 350)) +
geom_hline(yintercept = 300, linetype = "dotted") +
theme_bw() +
labs(x = "Replicate", y = "Estimate (bp)")
# Plot mixture model (w1)
ggplot(mixture_long %>% filter(parameter == "w1"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1)) +
theme_bw() +
labs(x = "Replicate", y = expression("Estimate of " * w[1]))
library(patchwork)
# Long format for mixture model
df_min_aic_mixture <- df_min_aic %>% filter(model == "mixture")
# Main estimates
df_long <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1, mean1, mean2, mean),
names_to = "parameter", values_to = "est") %>%
select(seed, parameter, est)
# 2.5% quantiles
df_long_2.5 <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1_q2.5, mean1_q2.5, mean2_q2.5, mean_q2.5),
names_to = "parameter", values_to = "q2.5") %>%
mutate(parameter = gsub("_q2\\.5", "", parameter)) %>%
select(seed, parameter, q2.5)
# 97.5% quantiles
df_long_97.5 <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1_q97.5, mean1_q97.5, mean2_q97.5, mean_q97.5),
names_to = "parameter", values_to = "q97.5") %>%
mutate(parameter = gsub("_q97\\.5", "", parameter)) %>%
select(seed, parameter, q97.5)
# Merge everything
mixture_long <- df_long %>%
left_join(df_long_2.5, by = c("seed", "parameter")) %>%
left_join(df_long_97.5, by = c("seed", "parameter"))
# First recode
mixture_long <- mixture_long %>%
mutate(parameter = recode(parameter,
mean = "Overall~Mean",
mean1 = "phi[1]",
mean2 = "phi[2]",
w1 = "w[1]"))
# Plot for mean, phi1, phi2
p1 <- ggplot(mixture_long %>% filter(parameter != "w[1]"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
facet_wrap(~parameter, labeller = label_parsed) +
scale_y_continuous(limits = c(0, 350), expand = c(0, 0)) +
geom_hline(yintercept = 300, linetype = "dotted") +
theme_bw() +
labs(x = "Replicate", y = "Estimate (bp)")
# Plot for w1
p2 <- ggplot(mixture_long %>% filter(parameter == "w[1]"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
facet_wrap(~parameter, labeller = label_parsed) +
scale_y_continuous(limits = c(0, 1), expand = c(0, 0)) +
theme_bw() +
labs(x = "Replicate", y = expression("Estimate of " * w[1]))
# Combine them
p1 / p2
# Long format for mixture model
df_min_aic_mixture <- df_min_aic %>% filter(model == "mixture")
# Main estimates
df_long <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1, mean1, mean2, mean),
names_to = "parameter", values_to = "est") %>%
select(seed, parameter, est)
# 2.5% quantiles
df_long_2.5 <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1_q2.5, mean1_q2.5, mean2_q2.5, mean_q2.5),
names_to = "parameter", values_to = "q2.5") %>%
mutate(parameter = gsub("_q2\\.5", "", parameter)) %>%
select(seed, parameter, q2.5)
# 97.5% quantiles
df_long_97.5 <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1_q97.5, mean1_q97.5, mean2_q97.5, mean_q97.5),
names_to = "parameter", values_to = "q97.5") %>%
mutate(parameter = gsub("_q97\\.5", "", parameter)) %>%
select(seed, parameter, q97.5)
# Merge everything
mixture_long <- df_long %>%
left_join(df_long_2.5, by = c("seed", "parameter")) %>%
left_join(df_long_97.5, by = c("seed", "parameter"))
# Recode labels
mixture_long <- mixture_long %>%
mutate(parameter = recode(parameter,
mean = "Overall~Mean",
mean1 = "phi[1]",
mean2 = "phi[2]",
w1 = "w[1]"))
# Individual small plots
p_mean_phi <- ggplot(mixture_long %>% filter(parameter != "w[1]"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
facet_wrap(~parameter, nrow = 1, labeller = label_parsed) +
scale_y_continuous(limits = c(0, 350), expand = c(0, 0)) +
geom_hline(yintercept = 300, linetype = "dotted") +
theme_bw() +
labs(x = "Replicate", y = "Estimate (bp)")
p_w1 <- ggplot(mixture_long %>% filter(parameter == "w[1]"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
facet_wrap(~parameter, nrow = 1, labeller = label_parsed) +
scale_y_continuous(limits = c(0, 1), expand = c(0, 0)) +
theme_bw() +
labs(x = "Replicate", y = expression("Estimate of " * w[1]))
# Combine into one row
wrap_plots(p_mean_phi, p_w1, nrow = 1)
# Combine into one row
wrap_plots(p_mean_phi, p_w1, nrow = 1, widths = c(3, 1))
# Long format for mixture model
df_min_aic_mixture <- df_min_aic %>% filter(model == "mixture")
# Main estimates
df_long <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1, mean1, mean2, mean),
names_to = "parameter", values_to = "est") %>%
select(seed, parameter, est)
# 2.5% quantiles
df_long_2.5 <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1_q2.5, mean1_q2.5, mean2_q2.5, mean_q2.5),
names_to = "parameter", values_to = "q2.5") %>%
mutate(parameter = gsub("_q2\\.5", "", parameter)) %>%
select(seed, parameter, q2.5)
# 97.5% quantiles
df_long_97.5 <- df_min_aic_mixture %>%
pivot_longer(cols = c(w1_q97.5, mean1_q97.5, mean2_q97.5, mean_q97.5),
names_to = "parameter", values_to = "q97.5") %>%
mutate(parameter = gsub("_q97\\.5", "", parameter)) %>%
select(seed, parameter, q97.5)
# Merge everything
mixture_long <- df_long %>%
left_join(df_long_2.5, by = c("seed", "parameter")) %>%
left_join(df_long_97.5, by = c("seed", "parameter"))
# Recode labels
mixture_long <- mixture_long %>%
mutate(parameter = recode(parameter,
mean = "Overall~Mean",
mean1 = "phi[1]",
mean2 = "phi[2]",
w1 = "w[1]"))
# Individual small plots
p_mean_phi <- ggplot(mixture_long %>% filter(parameter != "w[1]"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
facet_wrap(~parameter, nrow = 1, labeller = label_parsed) +
scale_y_continuous(limits = c(0, 350), expand = c(0, 0)) +
geom_hline(yintercept = 300, linetype = "dotted") +
theme_bw() +
labs(x = "Replicate", y = "Estimate (bp)")
p_w1 <- ggplot(mixture_long %>% filter(parameter == "w[1]"),
aes(x = as.factor(seed), y = est)) +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
facet_wrap(~parameter, nrow = 1, labeller = label_parsed) +
scale_y_continuous(limits = c(0, 1), expand = c(0, 0)) +
theme_bw() +
labs(x = "Replicate", y = "Estimate")
# Combine into one row
wrap_plots(p_mean_phi, p_w1, nrow = 1, widths = c(3, 1))
# Combine into one row
combined_plot <- xswrap_plots(p_mean_phi, p_w1, nrow = 1, widths = c(3, 1))
# Combine into one row
combined_plot <- wrap_plots(p_mean_phi, p_w1, nrow = 1, widths = c(3, 1))
# Save the combined plot
ggsave("sim.p2.png", combined_plot, height = 4, width = 7)
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
res_null <- read.csv("res_null.csv")
res_sum <- read.csv("res_sum.csv")
res_mixture <- read.csv("res_mixture.csv") %>% arrange(NLL)
res_mixture <- res_mixture[1,]
res_df <- rbind(res_null, res_sum, res_mixture)
res_df$mean1 <- 1/res_df$phi1
res_df$mean2 <- 1/res_df$phi2
long_est <- res_df %>%
select(-X) %>%  # drop X column
pivot_longer(
cols = c(NLL, AIC, mean, w1, phi1, phi2, mean1, mean2),
names_to = "variable",
values_to = "est")
# ######### bootstrap #########
# List all files starting with "bootstrap" and ending with a seed number
file_list <- list.files(pattern = "^bootstrap.*seed[0-9]+.*\\.csv$", full.names = TRUE)
# Load CSVs, remove the first column, and attach seed number
res_list <- lapply(file_list, function(file) {
# Read CSV and drop first column
df <- read.csv(file)
# Extract seed number using regex
seed <- sub(".*seed([0-9]+).*\\.csv$", "\\1", basename(file))
# Add seed as a new column
df$seed <- as.integer(seed)
df$mean1 <- 1/df$phi1
df$mean2 <- 1/df$phi2
return(df)
})
res_boot <- do.call(rbind, res_list) %>%
group_by(model, bootstrap, seed) %>%
slice_min(NLL, with_ties = FALSE) %>%
ungroup() %>%
arrange(model, seed, bootstrap)
# Define desired quantiles
q_probs <- c(0.025, 0.975)
vars <- c("NLL", "AIC", "w1", "phi1", "phi2", "mean1", "mean2", "mean")
q_labels <- paste0("q", q_probs * 100)
# Compute quantiles grouped by model, wide format for quantiles
quantiles_by_model <- res_boot %>%
group_by(model) %>%
group_split() %>%
map_dfr(function(subdf) {
model_val <- unique(subdf$model)
map_dfr(vars, function(v) {
q_vals <- quantile(subdf[[v]], probs = q_probs, na.rm = TRUE)
tibble(
model = model_val,
variable = v,
q2.5 = q_vals[[1]],
q97.5 = q_vals[[2]]
)
})
})
res_df <- inner_join(long_est, quantiles_by_model)
View(res_df)
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
res_null <- read.csv("res_null.csv")
res_sum <- read.csv("res_sum.csv")
res_mixture <- read.csv("res_mixture.csv") %>% arrange(NLL)
res_mixture <- res_mixture[1,]
res_df <- rbind(res_null, res_sum, res_mixture)
res_df$mean1 <- 1/res_df$phi1
res_df$mean2 <- 1/res_df$phi2
long_est <- res_df %>%
select(-X) %>%  # drop X column
pivot_longer(
cols = c(NLL, AIC, mean, w1, phi1, phi2, mean1, mean2),
names_to = "variable",
values_to = "est")
# ######### bootstrap #########
# List all files starting with "bootstrap" and ending with a seed number
file_list <- list.files(pattern = "^bootstrap.*seed[0-9]+.*\\.csv$", full.names = TRUE)
# Load CSVs, remove the first column, and attach seed number
res_list <- lapply(file_list, function(file) {
# Read CSV and drop first column
df <- read.csv(file)
# Extract seed number using regex
seed <- sub(".*seed([0-9]+).*\\.csv$", "\\1", basename(file))
# Add seed as a new column
df$seed <- as.integer(seed)
df$mean1 <- 1/df$phi1
df$mean2 <- 1/df$phi2
return(df)
})
res_boot <- do.call(rbind, res_list) %>%
group_by(model, bootstrap, seed) %>%
slice_min(NLL, with_ties = FALSE) %>%
ungroup() %>%
arrange(model, seed, bootstrap)
# Define desired quantiles
q_probs <- c(0.025, 0.975)
vars <- c("NLL", "AIC", "w1", "phi1", "phi2", "mean1", "mean2", "mean")
q_labels <- paste0("q", q_probs * 100)
# Compute quantiles grouped by model, wide format for quantiles
quantiles_by_model <- res_boot %>%
group_by(model) %>%
group_split() %>%
map_dfr(function(subdf) {
model_val <- unique(subdf$model)
map_dfr(vars, function(v) {
q_vals <- quantile(subdf[[v]], probs = q_probs, na.rm = TRUE)
tibble(
model = model_val,
variable = v,
q2.5 = q_vals[[1]],
q97.5 = q_vals[[2]]
)
})
})
res_df <- inner_join(long_est, quantiles_by_model)
mixture_plot_df <- res_df %>% filter(model == "mixture")
ggplot(mixture_plot_df %>% filter(variable %in% c("mean", "mean1", "mean2", "w1")), aes(x = model, y = est)) +
geom_point() +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
facet_wrap(vars(variable), scales = "free_y") +
theme_bw() +
labs(y = "Estimate (with 95% CI)", x = "Model")
View(res_boot)
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
res_null <- read.csv("res_null.csv")
res_sum <- read.csv("res_sum.csv")
res_mixture <- read.csv("res_mixture.csv") %>% arrange(NLL)
res_mixture <- res_mixture[1,]
res_df <- rbind(res_null, res_sum, res_mixture)
res_df$mean1 <- 1/res_df$phi1
res_df$mean2 <- 1/res_df$phi2
long_est <- res_df %>%
select(-X) %>%  # drop X column
pivot_longer(
cols = c(NLL, AIC, mean, w1, phi1, phi2, mean1, mean2),
names_to = "variable",
values_to = "est")
# ######### bootstrap #########
# List all files starting with "bootstrap" and ending with a seed number
file_list <- list.files(pattern = "^bootstrap.*seed[0-9]+.*\\.csv$", full.names = TRUE)
# Load CSVs, remove the first column, and attach seed number
res_list <- lapply(file_list, function(file) {
# Read CSV and drop first column
df <- read.csv(file)
# Extract seed number using regex
seed <- sub(".*seed([0-9]+).*\\.csv$", "\\1", basename(file))
# Add seed as a new column
df$seed <- as.integer(seed)
df$mean1 <- 1/df$phi1
df$mean2 <- 1/df$phi2
return(df)
})
res_boot <- do.call(rbind, res_list) %>%
group_by(model, bootstrap, seed) %>%
slice_min(NLL, with_ties = FALSE) %>%
ungroup() %>%
arrange(model, seed, bootstrap)
res_boot <- res_boot %>%
mutate(index = group_indices(., seed, bootstrap))
View(res_boot)
res_boot <- res_boot %>%
mutate(index = group_indices(., seed, bootstrap)) %>% filter(index <= 500)
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
res_null <- read.csv("res_null.csv")
res_sum <- read.csv("res_sum.csv")
res_mixture <- read.csv("res_mixture.csv") %>% arrange(NLL)
res_mixture <- res_mixture[1,]
res_df <- rbind(res_null, res_sum, res_mixture)
res_df$mean1 <- 1/res_df$phi1
res_df$mean2 <- 1/res_df$phi2
long_est <- res_df %>%
select(-X) %>%  # drop X column
pivot_longer(
cols = c(NLL, AIC, mean, w1, phi1, phi2, mean1, mean2),
names_to = "variable",
values_to = "est")
# ######### bootstrap #########
# List all files starting with "bootstrap" and ending with a seed number
file_list <- list.files(pattern = "^bootstrap.*seed[0-9]+.*\\.csv$", full.names = TRUE)
# Load CSVs, remove the first column, and attach seed number
res_list <- lapply(file_list, function(file) {
# Read CSV and drop first column
df <- read.csv(file)
# Extract seed number using regex
seed <- sub(".*seed([0-9]+).*\\.csv$", "\\1", basename(file))
# Add seed as a new column
df$seed <- as.integer(seed)
df$mean1 <- 1/df$phi1
df$mean2 <- 1/df$phi2
return(df)
})
res_boot <- do.call(rbind, res_list) %>%
group_by(model, bootstrap, seed) %>%
slice_min(NLL, with_ties = FALSE) %>%
ungroup() %>%
arrange(model, seed, bootstrap)
res_boot <- res_boot %>%
mutate(index = group_indices(., seed, bootstrap)) %>% filter(index <= 500)
# Define desired quantiles
q_probs <- c(0.025, 0.975)
vars <- c("NLL", "AIC", "w1", "phi1", "phi2", "mean1", "mean2", "mean")
q_labels <- paste0("q", q_probs * 100)
# Compute quantiles grouped by model, wide format for quantiles
quantiles_by_model <- res_boot %>%
group_by(model) %>%
group_split() %>%
map_dfr(function(subdf) {
model_val <- unique(subdf$model)
map_dfr(vars, function(v) {
q_vals <- quantile(subdf[[v]], probs = q_probs, na.rm = TRUE)
tibble(
model = model_val,
variable = v,
q2.5 = q_vals[[1]],
q97.5 = q_vals[[2]]
)
})
})
res_df <- inner_join(long_est, quantiles_by_model)
mixture_plot_df <- res_df %>% filter(model == "mixture")
ggplot(mixture_plot_df %>% filter(variable %in% c("mean", "mean1", "mean2", "w1")), aes(x = model, y = est)) +
geom_point() +
geom_errorbar(aes(ymin = q2.5, ymax = q97.5), width = 0.2) +
facet_wrap(vars(variable), scales = "free_y") +
theme_bw() +
labs(y = "Estimate (with 95% CI)", x = "Model")
1.220192e+07
1.226815e+07
1.220192e+07
1.186032e+07
5.250000e-03
7.247302e+02
1.689721e+01
7.201331e+02
7.287222e+02
1.640455e+01
1.700627e+01
1.689721e+01
1.640455e+01
1.700627e+01
2.061334e+01
1.993487e+01
2.073769e+01
