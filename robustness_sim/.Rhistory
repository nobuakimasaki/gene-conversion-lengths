# Define a color blind-friendly palette
color_palette <- c("Geometric" = "#56B4E9",
"Sum of two geometric" = "#F0E442",
"Sum of three geometric" = "#E69F00",
"Uniform" = "#009E73")
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom3, color = "Sum of three geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(title = "Density of four distributions",
x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Sum of three geometric", "Uniform")) +
scale_x_continuous(limits = c(1, 1500), breaks = c(1, seq(250, 1500, by = 250))) +  # Start at 1 and set breaks
theme_minimal() +
theme(legend.title = element_blank())
ggsave("figs/pmf.png", width = 7, height = 5)
library(dplyr)
geom.res <- readRDS("res.sim.2M.1500.region.5000.geom.MAF.0.5.boot.keep.ends.rds")
geom2.res <- readRDS("res.sim.2M.1500.region.5000.geom2.MAF.0.5.boot.keep.ends.rds")
geom3.res <- readRDS("res.sim.2M.1500.region.5000.geom3.MAF.0.5.boot.keep.ends.rds")
unif.res <- readRDS("res.sim.2M.1500.region.5000.unif.MAF.0.5.boot.keep.ends.rds")
unif.res <- readRDS("res.sim.2M.1500.region.5000.unif.MAF.0.5.boot.keep.ends.1.rds")
unif.2.res <- readRDS("res.sim.2M.1500.region.5000.unif.MAF.0.5.boot.keep.ends.1.rds")
library(dplyr)
geom.res <- readRDS("res.sim.2M.1500.region.5000.geom.MAF.0.5.boot.keep.ends.rds")
geom2.res <- readRDS("res.sim.2M.1500.region.5000.geom2.MAF.0.5.boot.keep.ends.rds")
geom3.res <- readRDS("res.sim.2M.1500.region.5000.geom3.MAF.0.5.boot.keep.ends.rds")
unif.1.res <- readRDS("res.sim.2M.1500.region.5000.unif.MAF.0.5.boot.keep.ends.1.rds")
unif.2.res <- readRDS("res.sim.2M.1500.region.5000.unif.MAF.0.5.boot.keep.ends.1.rds")
unif.res <- c(unif.1.res, unif.2.res)
### This file is used to analyze the results from fitting the model on tracts generated from individuals in the coalescent simulation.
library(dplyr)
geom.res <- readRDS("model_fitting/res.sim.2M.1500.region.5000.geom.MAF.0.5.boot.keep.ends.rds")
geom2.res <- readRDS("model_fitting/res.sim.2M.1500.region.5000.geom2.MAF.0.5.boot.keep.ends.rds")
geom3.res <- readRDS("model_fitting/res.sim.2M.1500.region.5000.geom3.MAF.0.5.boot.keep.ends.rds")
unif.1.res <- readRDS("model_fitting/res.sim.2M.1500.region.5000.unif.MAF.0.5.boot.keep.ends.1.rds")
unif.2.res <- readRDS("model_fitting/res.sim.2M.1500.region.5000.unif.MAF.0.5.boot.keep.ends.1.rds")
unif.res <- c(unif.1.res, unif.2.res)
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometrics"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_y_log10() +  # Log scale for better visualization
scale_color_manual(values = color_palette) +
theme_minimal()
# Load the necessary libraries
library(ggplot2)
library(dplyr)
# Define PMF functions
calc_pmf_geom <- function(n, phi) {(1-phi)^(n-1)*phi}
calc_pmf_geom2 <- function(n, phi) {(n-1)*(1-phi)^(n-2)*phi^2}
# Define the range of x values (number of failures)
x <- 0:1500
# Calculate the PMF for geometric and sum of two geometric distributions
pmf_geom <- sapply(x, calc_pmf_geom, phi = 1/300)
pmf_geom2 <- sapply(x, calc_pmf_geom2, phi = 1/150)
# Mixture distribution: 90% weight for small mean, 10% weight for large mean
# Given overall mean = 300:
# Let mean1 = 100 (small mean) and mean2 = 3000 (large mean)
# Solve for phi1 and phi2 using E[N] = 1/phi:
phi1 <- 1 / 100
phi2 <- 1 / 3000
# Compute the mixture PMF
pmf_mixture <- 0.9 * sapply(x, calc_pmf_geom, phi = phi1) +
0.1 * sapply(x, calc_pmf_geom, phi = phi2)
# Uniform distribution PMF
pmf_uniform <- ifelse(x >= 1 & x <= 599, 1 / 599, 0)
# Set specific PMF values to 0
pmf_geom[1] <- 0
pmf_geom2[1:2] <- 0
pmf_mixture[1] <- 0
# Create a data frame for plotting all distributions
data <- data.frame(
x = x,
pmf_geom = pmf_geom,
pmf_geom2 = pmf_geom2,
pmf_mixture = pmf_mixture,
pmf_uniform = pmf_uniform
)
# Define a color-blind-friendly palette
color_palette <- c("Geometric" = "#56B4E9",
"Sum of two geometric" = "#F0E442",
"Mixture of two geometrics" = "#E69F00",
"Uniform" = "#009E73")
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometrics"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_y_log10() +  # Log scale for better visualization
scale_color_manual(values = color_palette) +
theme_minimal()
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometrics"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_y_log10() +  # Log scale for better visualization
scale_x_continuous(limits = c(1, 1500), breaks = c(1, seq(250, 1500, by = 250))) +  # Start at 1 and set breaks
theme_bw() +
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
### Supplementary Figure 2
# Load the necessary libraries
library(ggplot2)
library(dplyr)
calc_pmf_geom <- function(n, phi) {(1-phi)^(n-1)*phi}
calc_pmf_geom2 <- function(n, phi) {(n-1)*(1-phi)^(n-2)*phi^2}
calc_pmf_geom3 <- function(n, phi) {choose(n-1, 2)*(1-phi)^(n-3)*phi^3}
# Define the range of x values (number of failures)
x <- 0:1500  # Adjust this range if needed
# Calculate the PMF for negative binomial and geometric distributions
pmf_geom <- lapply(x, calc_pmf_geom, phi = 1/300) %>% unlist()
pmf_geom2 <- lapply(x, calc_pmf_geom2, phi = 1/150) %>% unlist()
pmf_geom3 <- lapply(x, calc_pmf_geom3, phi = 1/100) %>% unlist()
pmf_uniform <- ifelse(x >= 1 & x <= 599, 1 / 599, 0)
pmf_geom[1] <- 0
pmf_geom2[1] <- 0
pmf_geom2[2] <- 0
pmf_geom3[1] <- 0
pmf_geom3[2] <- 0
pmf_geom3[3] <- 0
# Create a data frame for plotting all distributions
data <- data.frame(x = x,
pmf_geom = pmf_geom,
pmf_geom2 = pmf_geom2,
pmf_geom3 = pmf_geom3,
pmf_uniform = pmf_uniform)
# Define a color blind-friendly palette
color_palette <- c("Geometric" = "#56B4E9",
"Sum of two geometric" = "#F0E442",
"Sum of three geometric" = "#E69F00",
"Uniform" = "#009E73")
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom3, color = "Sum of three geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Sum of three geometric", "Uniform")) +
scale_x_continuous(limits = c(1, 1500), breaks = c(1, seq(250, 1500, by = 250))) +  # Start at 1 and set breaks
theme_bw() +
theme(legend.title = element_blank())
ggsave("figs/pmf.png", width = 7, height = 5)
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometrics"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_x_continuous(limits = c(1, 1500), breaks = c(1, seq(250, 1500, by = 250))) +  # Start at 1 and set breaks
theme_bw() +
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometrics"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_x_continuous(limits = c(1, 1500), breaks = c(1, seq(250, 1500, by = 250))) +  # Start at 1 and set breaks
theme_bw() +
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometrics"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_x_continuous(limits = c(1, 1500), breaks = c(1, seq(250, 1500, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_x_continuous(limits = c(1, 1500), breaks = c(1, seq(250, 1500, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_x_continuous(limits = c(1, 1500), breaks = c(1, seq(250, 1500, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Load the necessary libraries
library(ggplot2)
library(dplyr)
# Define PMF functions
calc_pmf_geom <- function(n, phi) {(1-phi)^(n-1)*phi}
calc_pmf_geom2 <- function(n, phi) {(n-1)*(1-phi)^(n-2)*phi^2}
# Define the range of x values (number of failures)
x <- 0:1500
# Calculate the PMF for geometric and sum of two geometric distributions
pmf_geom <- sapply(x, calc_pmf_geom, phi = 1/300)
pmf_geom2 <- sapply(x, calc_pmf_geom2, phi = 1/150)
# Mixture distribution: 90% weight for small mean, 10% weight for large mean
# Given overall mean = 300:
# Let mean1 = 100 (small mean) and mean2 = 3000 (large mean)
# Solve for phi1 and phi2 using E[N] = 1/phi:
phi1 <- 1 / 100
phi2 <- 1 / 3000
# Compute the mixture PMF
pmf_mixture <- 0.9 * sapply(x, calc_pmf_geom, phi = phi1) +
0.1 * sapply(x, calc_pmf_geom, phi = phi2)
# Uniform distribution PMF
pmf_uniform <- ifelse(x >= 1 & x <= 599, 1 / 599, 0)
# Set specific PMF values to 0
pmf_geom[1] <- 0
pmf_geom2[1:2] <- 0
pmf_mixture[1] <- 0
# Create a data frame for plotting all distributions
data <- data.frame(
x = x,
pmf_geom = pmf_geom,
pmf_geom2 = pmf_geom2,
pmf_mixture = pmf_mixture,
pmf_uniform = pmf_uniform
)
# Define a color-blind-friendly palette
color_palette <- c("Geometric" = "#56B4E9",
"Sum of two geometric" = "#F0E442",
"Mixture of two geometrics" = "#E69F00",
"Uniform" = "#009E73")
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_x_continuous(limits = c(1, 1500), breaks = c(1, seq(250, 1500, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_x_continuous(limits = c(1, 3000), breaks = c(1, seq(250, 1500, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_x_continuous(limits = c(1, 3000), breaks = c(1, seq(250, 3000, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Load the necessary libraries
library(ggplot2)
library(dplyr)
# Define PMF functions
calc_pmf_geom <- function(n, phi) {(1-phi)^(n-1)*phi}
calc_pmf_geom2 <- function(n, phi) {(n-1)*(1-phi)^(n-2)*phi^2}
# Define the range of x values (number of failures)
x <- 0:4000
# Calculate the PMF for geometric and sum of two geometric distributions
pmf_geom <- sapply(x, calc_pmf_geom, phi = 1/300)
pmf_geom2 <- sapply(x, calc_pmf_geom2, phi = 1/150)
# Mixture distribution: 90% weight for small mean, 10% weight for large mean
# Given overall mean = 300:
# Let mean1 = 100 (small mean) and mean2 = 3000 (large mean)
# Solve for phi1 and phi2 using E[N] = 1/phi:
phi1 <- 1 / 100
phi2 <- 1 / 3000
# Compute the mixture PMF
pmf_mixture <- 0.9 * sapply(x, calc_pmf_geom, phi = phi1) +
0.1 * sapply(x, calc_pmf_geom, phi = phi2)
# Uniform distribution PMF
pmf_uniform <- ifelse(x >= 1 & x <= 599, 1 / 599, 0)
# Set specific PMF values to 0
pmf_geom[1] <- 0
pmf_geom2[1:2] <- 0
pmf_mixture[1] <- 0
# Create a data frame for plotting all distributions
data <- data.frame(
x = x,
pmf_geom = pmf_geom,
pmf_geom2 = pmf_geom2,
pmf_mixture = pmf_mixture,
pmf_uniform = pmf_uniform
)
# Define a color-blind-friendly palette
color_palette <- c("Geometric" = "#56B4E9",
"Sum of two geometric" = "#F0E442",
"Mixture of two geometrics" = "#E69F00",
"Uniform" = "#009E73")
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_x_continuous(limits = c(1, 3000), breaks = c(1, seq(250, 3000, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
sum(pmf_mixture)
# Define a color-blind-friendly palette
color_palette <- c("Geometric" = "#56B4E9",
"Sum of two geometric" = "#F0E442",
"Mixture of two geometric" = "#E69F00",
"Uniform" = "#009E73")
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_x_continuous(limits = c(1, 3000), breaks = c(1, seq(250, 3000, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Load the necessary libraries
library(ggplot2)
library(dplyr)
# Define PMF functions
calc_pmf_geom <- function(n, phi) {(1-phi)^(n-1)*phi}
calc_pmf_geom2 <- function(n, phi) {(n-1)*(1-phi)^(n-2)*phi^2}
# Define the range of x values (number of failures)
x <- 0:4000
# Calculate the PMF for geometric and sum of two geometric distributions
pmf_geom <- sapply(x, calc_pmf_geom, phi = 1/300)
pmf_geom2 <- sapply(x, calc_pmf_geom2, phi = 1/150)
# Mixture distribution: 90% weight for small mean, 10% weight for large mean
# Given overall mean = 300:
# Let mean1 = 100 (small mean) and mean2 = 3000 (large mean)
# Solve for phi1 and phi2 using E[N] = 1/phi:
phi1 <- 1 / 100
phi2 <- 1 / 3000
# Compute the mixture PMF
pmf_mixture <- 0.7 * sapply(x, calc_pmf_geom, phi = phi1) +
0.3 * sapply(x, calc_pmf_geom, phi = phi2)
# Uniform distribution PMF
pmf_uniform <- ifelse(x >= 1 & x <= 599, 1 / 599, 0)
# Set specific PMF values to 0
pmf_geom[1] <- 0
pmf_geom2[1:2] <- 0
pmf_mixture[1] <- 0
# Create a data frame for plotting all distributions
data <- data.frame(
x = x,
pmf_geom = pmf_geom,
pmf_geom2 = pmf_geom2,
pmf_mixture = pmf_mixture,
pmf_uniform = pmf_uniform
)
# Define a color-blind-friendly palette
color_palette <- c("Geometric" = "#56B4E9",
"Sum of two geometric" = "#F0E442",
"Mixture of two geometric" = "#E69F00",
"Uniform" = "#009E73")
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_x_continuous(limits = c(1, 3000), breaks = c(1, seq(250, 3000, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_y_log10() +
scale_x_continuous(limits = c(1, 3000), breaks = c(1, seq(250, 3000, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Load the necessary libraries
library(ggplot2)
library(dplyr)
# Define PMF functions
calc_pmf_geom <- function(n, phi) {(1-phi)^(n-1)*phi}
calc_pmf_geom2 <- function(n, phi) {(n-1)*(1-phi)^(n-2)*phi^2}
# Define the range of x values (number of failures)
x <- 0:4000
# Calculate the PMF for geometric and sum of two geometric distributions
pmf_geom <- sapply(x, calc_pmf_geom, phi = 1/300)
pmf_geom2 <- sapply(x, calc_pmf_geom2, phi = 1/150)
# Mixture distribution: 90% weight for small mean, 10% weight for large mean
# Given overall mean = 300:
# Let mean1 = 100 (small mean) and mean2 = 3000 (large mean)
# Solve for phi1 and phi2 using E[N] = 1/phi:
phi1 <- 1 / 100
phi2 <- 1 / 3000
# Compute the mixture PMF
pmf_mixture <- 0.9 * sapply(x, calc_pmf_geom, phi = phi1) +
0.1 * sapply(x, calc_pmf_geom, phi = phi2)
# Uniform distribution PMF
pmf_uniform <- ifelse(x >= 1 & x <= 599, 1 / 599, 0)
# Set specific PMF values to 0
pmf_geom[1] <- 0
pmf_geom2[1:2] <- 0
pmf_mixture[1] <- 0
# Create a data frame for plotting all distributions
data <- data.frame(
x = x,
pmf_geom = pmf_geom,
pmf_geom2 = pmf_geom2,
pmf_mixture = pmf_mixture,
pmf_uniform = pmf_uniform
)
# Define a color-blind-friendly palette
color_palette <- c("Geometric" = "#56B4E9",
"Sum of two geometric" = "#F0E442",
"Mixture of two geometric" = "#E69F00",
"Uniform" = "#009E73")
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "P(N=n)") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_y_log10() +
scale_x_continuous(limits = c(1, 3000), breaks = c(1, seq(250, 3000, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "log(P(N=n))") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_y_log10() +
scale_x_continuous(limits = c(1, 3000), breaks = c(1, seq(250, 3000, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "log(P(N=n))") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_y_log10() +
scale_x_continuous(limits = c(1, 3000), breaks = c(1, seq(250, 3000, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
# Plot the PMF using ggplot2
ggplot(data) +
geom_line(aes(x = x, y = pmf_geom, color = "Geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_geom2, color = "Sum of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_mixture, color = "Mixture of two geometric"), size = 1) +
geom_line(aes(x = x, y = pmf_uniform, color = "Uniform"), size = 1) +
labs(x = "n", y = "log(P(N=n))") +
scale_color_manual(values = color_palette, breaks = c("Geometric", "Sum of two geometric", "Mixture of two geometric", "Uniform")) +
scale_y_log10() +
scale_x_continuous(limits = c(1, 3000), breaks = c(1, seq(250, 3000, by = 250))) +  # Start at 1 and set breaks
theme(legend.title = element_blank()) +
scale_color_manual(values = color_palette) +
theme_minimal()
ggsave("figs/pmf2.png", width = 7, height = 5)
source("fns_sim.R")
